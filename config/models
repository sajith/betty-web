-- -*- haskell -*-

-- TODO: Consider unifying 'User', 'UserProfile', and 'AuthTokens'

------------------------------------------------------------------------

-- "user" table has just enough details to support email auth, and
-- this comes from Yesod book.

User
    email Text
    password Text Maybe -- password is not be set until verification
    verkey Text Maybe   -- verification key for setting/resetting passwords
    verified Bool
    UniqueUser email
    deriving Typeable
    deriving Show

------------------------------------------------------------------------

-- other details about a user goes here

UserProfile
    uid UserId
    -- email Text               -- TODO: handle this.
    -- signupdate UTCTime Maybe -- default: TODO
    -- verifydate UTCTime Maybe -- default: TODO
    timezone Text Maybe     -- default: GMT
    dtype Text Maybe        -- default: unknown (diabetes type)
    bgunits BGUnit Maybe    -- default: mg/dL
    wtunits WtUnit Maybe      -- default: kg
    insunits Text Maybe     -- default: unknown (insulin units)
    birthYear Int Maybe     -- default: nil
    diagnosedYear Int Maybe -- default: nil
    UniqueUserProfile uid
    deriving Show

------------------------------------------------------------------------

-- blood glucose logs

BloodGlucoseHistory
    uid UserId
    utctime UTCTime      -- TODO: remove duplicate time/date fields.   
    -- localtime ZonedTime Maybe -- TODO: enable and use this field.
    date Day
    time TimeOfDay
    timezone Text Maybe  -- TODO: use TimeZone data type, or
                         -- PostgreSQL timestamp with timezone field.
    value Double
    unit BGUnit Maybe
    notes Text Maybe

------------------------------------------------------------------------

-- auth tokens
AuthTokens
    uid UserId
    email Text
    token Text Maybe
    UniqueAuthTokens email

------------------------------------------------------------------------
