-- -*- haskell -*-

-- TODO: Consider unifying 'User', 'UserProfile', and 'AuthTokens'

------------------------------------------------------------------------

-- "user" table has just enough details to support email auth, and
-- this comes from Yesod book.

User
    email Text
    password Text Maybe -- password is not be set until verification
    verkey Text Maybe   -- verification key for setting/resetting passwords
    verified Bool
    token Text Maybe    -- API auth token
    UniqueUser email
    deriving Typeable
    deriving Show

------------------------------------------------------------------------

-- TODO: What if we split `User` to `User` and `Email`, like below?
-- Recent Yesod scaffolds do this.

-- User
--     ident Text
--     password Text Maybe
--     UniqueUser ident
--     deriving Typeable
-- Email
--     email Text
--     userId UserId Maybe
--     verkey Text Maybe
--     UniqueEmail email

------------------------------------------------------------------------

-- other details about a user goes here

UserProfile
    uid UserId
    -- email Text               -- TODO: handle this.
    -- signupdate UTCTime Maybe -- default: TODO
    -- verifydate UTCTime Maybe -- default: TODO
    timezone Text Maybe      -- default: GMT
    dtype Text Maybe         -- default: unknown (diabetes type)
    bgunits BGUnit Maybe     -- default: mg/dL
    wtunits WtUnit Maybe     -- default: kg
    insunits Text Maybe      -- default: unknown (insulin units)
    birthYear Int Maybe      -- default: nil
    diagnosedYear Int Maybe  -- default: nil
    UniqueUserProfile uid
    deriving Show

------------------------------------------------------------------------

-- blood glucose logs

-- TODO: what about adding "json" to derive ToJSON and FromJSON
-- instances of BloodGlucoseHistory?

-- TODO: would be nice to use `timestamp with time zone` (or
-- `timestamptz` as it is accepted in PostgreSQL) instead of the wonky
-- (date, time, tz) combo field.  This is distinct from `utctime`
-- field, which is just the server timestamp of when it received the
-- data.

BloodGlucoseHistory
    uid UserId
    -- email Text           -- TODO: handle this.
    utctime UTCTime         -- TODO: remove duplicate time/date fields.
    -- localtime UTCTime    -- TODO: Actual reported time stamp
    date Day
    time TimeOfDay
    timezone Text Maybe     -- TODO: use TimeZone data type, or
                            -- PostgreSQL timestamp with timezone field.
    value Double
    unit BGUnit Maybe
    notes Text Maybe
    deriving Show

------------------------------------------------------------------------
